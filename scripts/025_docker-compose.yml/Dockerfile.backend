# https://docs.docker.com/engine/reference/builder/
# https://docs.docker.com/build/building/multi-stage/

FROM oraclelinux:8.5 AS common
RUN dnf update -y
RUN dnf install -y zip wget git

# https://github.com/spring-petclinic/spring-petclinic-rest
FROM common AS prepare_backend
RUN mkdir /app && cd /app && git clone https://github.com/spring-petclinic/spring-petclinic-rest.git
RUN cd /app/spring-petclinic-rest && git checkout cd58b56fb9d0e7413e2634a1f6d4cfa21c1ec00e
RUN cd /app/spring-petclinic-rest && sed -i '/<artifactId>spring-boot-starter-actuator<\/artifactId>/a <exclusions><exclusion><artifactId>logback-classic</artifactId><groupId>ch.qos.logback</groupId></exclusion><exclusion><artifactId>log4j-to-slf4j</artifactId><groupId>org.apache.logging.log4j</groupId></exclusion><exclusion><artifactId>spring-boot-starter-logging</artifactId><groupId>org.springframework.boot</groupId></exclusion></exclusions>' pom.xml
RUN cd /app/spring-petclinic-rest && sed -i '/<artifactId>spring-boot-starter-data-jpa<\/artifactId>/a <exclusions><exclusion><artifactId>logback-classic</artifactId><groupId>ch.qos.logback</groupId></exclusion><exclusion><artifactId>log4j-to-slf4j</artifactId><groupId>org.apache.logging.log4j</groupId></exclusion><exclusion><artifactId>spring-boot-starter-logging</artifactId><groupId>org.springframework.boot</groupId></exclusion></exclusions>' pom.xml
RUN cd /app/spring-petclinic-rest && sed -i '/<artifactId>spring-boot-starter-web<\/artifactId>/a <exclusions><exclusion><groupId>org.apache.tomcat.embed</groupId><artifactId>tomcat-embed-websocket</artifactId></exclusion></exclusions>' pom.xml
RUN cd /app/spring-petclinic-rest && sed -i '/<\/properties>/a <packaging>war<\/packaging>' pom.xml
RUN cd /app/spring-petclinic-rest/src/main/resources && sed -i 's/#spring.sql.init.mode=always/spring.sql.init.mode=always/' application-mysql.properties
RUN cd /app/spring-petclinic-rest/src/main/resources && sed -i 's/#spring.sql.init.schema-locations=classpath\*:db\/mysql\/initDB.sql/spring.sql.init.schema-locations=classpath\*:db\/mysql\/initDB.sql/' application-mysql.properties
RUN cd /app/spring-petclinic-rest/src/main/resources && sed -i 's/#spring.sql.init.data-locations=classpath\*:db\/mysql\/populateDB.sql/spring.sql.init.data-locations=classpath\*:db\/mysql\/populateDB.sql/' application-mysql.properties
RUN cd /app/spring-petclinic-rest/src/main/resources && sed -i 's/spring.datasource.url = jdbc:mysql:\/\/localhost:3306\/petclinic?useUnicode=true/spring.datasource.url = jdbc:mysql:\/\/10.0.2.15:3306\/petclinic?useUnicode=true/' application-mysql.properties
RUN cd /app/spring-petclinic-rest/src/main/resources && sed -i 's/spring.datasource.username=pc/spring.datasource.username=mysql/' application-mysql.properties
RUN cd /app/spring-petclinic-rest/src/main/resources && sed -i 's/spring.datasource.password=petclinic/spring.datasource.password=senha/' application-mysql.properties

FROM maven:3.8.5-openjdk-11 AS build
COPY --from=prepare_backend /app /app
RUN cd /app/spring-petclinic-rest && mvn package -e -X 

FROM common AS server
RUN mkdir /app && cd /app && wget https://github.com/wildfly/wildfly/releases/download/26.1.2.Final/wildfly-26.1.2.Final.zip && unzip wildfly-26.1.2.Final.zip && rm -f wildfly-26.1.2.Final.zip

FROM openjdk:11-jdk-oraclelinux8 AS deploy
COPY --from=server /app /app
COPY --from=build  /app/spring-petclinic-rest/target/spring-petclinic-rest-2.6.2.war /app/wildfly-26.1.2.Final/standalone/deployments/spring-petclinic-rest.war
ENTRYPOINT /app/wildfly-26.1.2.Final/bin/standalone.sh -b 0.0.0.0
EXPOSE 8080
